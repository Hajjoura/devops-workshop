{
  "variables": {
    "BuildConfiguration": {
      "value": "release",
      "allowOverride": true
    },
    "BuildPlatform": {
      "value": "any cpu",
      "allowOverride": true
    },
    "system.debug": {
      "value": "false",
      "allowOverride": true
    }
  },
  "retentionRules": [
    {
      "branches": [ "+refs/heads/*" ],
      "artifacts": [],
      "artifactTypesToDelete": [ "FilePath", "SymbolStore" ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
  "process": {
    "phases": [
      {
        "steps": [
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Restore",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "DotNetCoreCLI1",
            "task": {
              "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "command": "restore",
              "publishWebProjects": "true",
              "projects": "$(Parameters.RestoreBuildProjects)",
              "arguments": "",
              "zipAfterPublish": "true"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Build",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "DotNetCoreCLI2",
            "task": {
              "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "command": "build",
              "publishWebProjects": "true",
              "projects": "$(Parameters.RestoreBuildProjects)",
              "arguments": "--configuration $(BuildConfiguration)",
              "zipAfterPublish": "true"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Publish",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "refName": "DotNetCoreCLI4",
            "task": {
              "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "command": "publish",
              "publishWebProjects": "True",
              "projects": "",
              "arguments": "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)",
              "zipAfterPublish": "True"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": true,
            "displayName": "Publish Artifact",
            "timeoutInMinutes": 0,
            "condition": "succeededOrFailed()",
            "refName": "PublishBuildArtifacts5",
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(build.artifactstagingdirectory)",
              "ArtifactName": "drop",
              "ArtifactType": "Container",
              "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
              "Parallel": "false",
              "ParallelCount": "8"
            }
          }
        ],
        "name": null,
        "jobAuthorizationScope": 0
      }
    ],
    "type": 1
  },
  "repository": {
    "properties": {
      "cleanOptions": "0",
      "labelSources": "0",
      "labelSourcesFormat": "$(build.buildNumber)",
      "reportBuildStatus": "true",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "checkoutNestedSubmodules": "false",
      "fetchDepth": "0"
    },
    "type": "TfsGit",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {
    "inputs": [
      {
        "options": {},
        "properties": {},
        "name": "RestoreBuildProjects",
        "label": "Project(s) to restore and build",
        "defaultValue": "**/*.csproj",
        "type": "multiline",
        "helpMarkDown": "Relative path of the .csproj file(s) from repo root. Wildcards can be used. For example, **/*.csproj for all .csproj files in all the subfolders.",
        "visibleRule": "",
        "groupName": ""
      }
    ]
  },
  "queue": {
    "id": 12,
    "name": "Hosted VS2017",
    "pool": {
      "id": 4,
      "name": "Hosted VS2017",
      "isHosted": true
    }
  },
  "id": 4,
  "name": "Workshop.DevOps.Build",
  "uri": "vstfs:///Build/Definition/4",
  "path": "\\",
  "type": 2
}